// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from main.djinni

#include "NativeRNYIMManager.hpp"  // my header
#include "Marshal.hpp"
#include "NativeJavascriptCallback.hpp"
#include "NativeReactBridge.hpp"

namespace djinni_generated {

NativeRNYIMManager::NativeRNYIMManager() : ::djinni::JniInterface<::RNYIMManager, NativeRNYIMManager>("com/youme/imrn/jni/RNYIMManager$CppProxy") {}

NativeRNYIMManager::~NativeRNYIMManager() = default;


CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNYIMManager_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::RNYIMManager>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_youme_imrn_jni_RNYIMManager_create(JNIEnv* jniEnv, jobject /*this*/, ::djinni_generated::NativeReactBridge::JniType j_bridge)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::RNYIMManager::create(::djinni_generated::NativeReactBridge::toCpp(jniEnv, j_bridge));
        return ::djinni::release(::djinni_generated::NativeRNYIMManager::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNYIMManager_00024CppProxy_native_1Init(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_appkey, jstring j_secret, jstring j_packageName, jint j_model, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNYIMManager>(nativeRef);
        ref->Init(::djinni::String::toCpp(jniEnv, j_appkey),
                  ::djinni::String::toCpp(jniEnv, j_secret),
                  ::djinni::String::toCpp(jniEnv, j_packageName),
                  ::djinni::I32::toCpp(jniEnv, j_model),
                  ::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNYIMManager_00024CppProxy_native_1Login(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_userID, jstring j_password,jstring j_token, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNYIMManager>(nativeRef);
        ref->Login(::djinni::String::toCpp(jniEnv, j_userID),
                   ::djinni::String::toCpp(jniEnv, j_password),
                   ::djinni::String::toCpp(jniEnv, j_token),
                   ::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNYIMManager_00024CppProxy_native_1Logout(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNYIMManager>(nativeRef);
        ref->Logout(::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNYIMManager_00024CppProxy_native_1StartPlayAudio(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_path, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNYIMManager>(nativeRef);
        ref->StartPlayAudio(::djinni::String::toCpp(jniEnv, j_path),
                            ::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNYIMManager_00024CppProxy_native_1StopPlayAudio(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNYIMManager>(nativeRef);
        ref->StopPlayAudio(::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNYIMManager_00024CppProxy_native_1GetRecentContacts(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNYIMManager>(nativeRef);
        ref->GetRecentContacts(::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNYIMManager_00024CppProxy_native_1OnPause(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNYIMManager>(nativeRef);
        ref->OnPause();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNYIMManager_00024CppProxy_native_1OnResume(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNYIMManager>(nativeRef);
        ref->OnResume();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNYIMManager_00024CppProxy_native_1SetAudioRecordCacheDir(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_path)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNYIMManager>(nativeRef);
        ref->SetAudioRecordCacheDir(::djinni::String::toCpp(jniEnv, j_path));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNYIMManager_00024CppProxy_native_1GetAudioCachePath(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNYIMManager>(nativeRef);
        ref->GetAudioCachePath(::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNYIMManager_00024CppProxy_native_1ClearAudioCachePath(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNYIMManager>(nativeRef);
        ref->ClearAudioCachePath();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNYIMManager_00024CppProxy_native_1FilterKeyword(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_text, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNYIMManager>(nativeRef);
        ref->FilterKeyword(::djinni::String::toCpp(jniEnv, j_text),
                           ::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
