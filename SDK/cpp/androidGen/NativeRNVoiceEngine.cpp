// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from main.djinni

#include "NativeRNVoiceEngine.hpp"  // my header
#include "Marshal.hpp"
#include "NativeJavascriptCallback.hpp"
#include "NativeReactBridge.hpp"

namespace djinni_generated {

NativeRNVoiceEngine::NativeRNVoiceEngine() : ::djinni::JniInterface<::RNVoiceEngine, NativeRNVoiceEngine>("com/youme/imrn/jni/RNVoiceEngine$CppProxy") {}

NativeRNVoiceEngine::~NativeRNVoiceEngine() = default;


CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNVoiceEngine_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::RNVoiceEngine>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_youme_imrn_jni_RNVoiceEngine_create(JNIEnv* jniEnv, jobject /*this*/, ::djinni_generated::NativeReactBridge::JniType j_bridge)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::RNVoiceEngine::create(::djinni_generated::NativeReactBridge::toCpp(jniEnv, j_bridge));
        return ::djinni::release(::djinni_generated::NativeRNVoiceEngine::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNVoiceEngine_00024CppProxy_native_1Init(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_appkey, jstring j_appsecret, jint j_model, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNVoiceEngine>(nativeRef);
        ref->Init(::djinni::String::toCpp(jniEnv, j_appkey),
                  ::djinni::String::toCpp(jniEnv, j_appsecret),
                  ::djinni::I32::toCpp(jniEnv, j_model),
                  ::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNVoiceEngine_00024CppProxy_native_1JoinChannelSingleMode(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_userID, jstring j_channel, jint j_userRole, jboolean j_checkRoomExist, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNVoiceEngine>(nativeRef);
        ref->JoinChannelSingleMode(::djinni::String::toCpp(jniEnv, j_userID),
                                   ::djinni::String::toCpp(jniEnv, j_channel),
                                   ::djinni::I32::toCpp(jniEnv, j_userRole),
                                   ::djinni::Bool::toCpp(jniEnv, j_checkRoomExist),
                                   ::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNVoiceEngine_00024CppProxy_native_1RequestRestApi(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_command, jstring j_queryBody, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNVoiceEngine>(nativeRef);
        ref->requestRestApi(
                ::djinni::String::toCpp(jniEnv, j_command),
                ::djinni::String::toCpp(jniEnv, j_queryBody),
                ::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback)
        );
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}
CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNVoiceEngine_00024CppProxy_native_1LeaveChannelAll(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNVoiceEngine>(nativeRef);
        ref->LeaveChannelAll(::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNVoiceEngine_00024CppProxy_native_1SetSpeakerMute(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jboolean j_on, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNVoiceEngine>(nativeRef);
        ref->SetSpeakerMute(::djinni::Bool::toCpp(jniEnv, j_on),
                            ::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNVoiceEngine_00024CppProxy_native_1SetMicrophoneMute(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jboolean j_mute, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNVoiceEngine>(nativeRef);
        ref->SetMicrophoneMute(::djinni::Bool::toCpp(jniEnv, j_mute),
                               ::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNVoiceEngine_00024CppProxy_native_1SetOtherMicMute(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_userID, jboolean j_mute, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNVoiceEngine>(nativeRef);
        ref->SetOtherMicMute(::djinni::String::toCpp(jniEnv, j_userID),
                             ::djinni::Bool::toCpp(jniEnv, j_mute),
                             ::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNVoiceEngine_00024CppProxy_native_1SetListenOtherVoice(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_userID, jboolean j_on, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNVoiceEngine>(nativeRef);
        ref->SetListenOtherVoice(::djinni::String::toCpp(jniEnv, j_userID),
                                 ::djinni::Bool::toCpp(jniEnv, j_on),
                                 ::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNVoiceEngine_00024CppProxy_native_1SetOutputToSpeaker(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jboolean j_mute, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNVoiceEngine>(nativeRef);
        ref->SetOutputToSpeaker(::djinni::Bool::toCpp(jniEnv, j_mute),
                               ::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_youme_imrn_jni_RNVoiceEngine_00024CppProxy_native_1SetAutoSendStatus(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jboolean j_mute, ::djinni_generated::NativeJavascriptCallback::JniType j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RNVoiceEngine>(nativeRef);
        ref->SetAutoSendStatus(::djinni::Bool::toCpp(jniEnv, j_mute),
                                ::djinni_generated::NativeJavascriptCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
