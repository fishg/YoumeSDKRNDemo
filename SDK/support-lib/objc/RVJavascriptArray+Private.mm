// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from react.djinni

#import "RVJavascriptArray+Private.h"
#import "RVJavascriptArray.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "RVJavascriptMap+Private.h"
#import "RVJavascriptObject+Private.h"
#import "RVJavascriptType+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class JavascriptArray::ObjcProxy final
: public ::JavascriptArray
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::JavascriptArray;
public:
    using ObjcProxyBase::ObjcProxyBase;
    int32_t size() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() size];
            return ::djinni::I32::toCpp(objcpp_result_);
        }
    }
    bool isNull(int32_t c_index) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() isNull:(::djinni::I32::fromCpp(c_index))];
            return ::djinni::Bool::toCpp(objcpp_result_);
        }
    }
    bool getBoolean(int32_t c_index) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getBoolean:(::djinni::I32::fromCpp(c_index))];
            return ::djinni::Bool::toCpp(objcpp_result_);
        }
    }
    double getDouble(int32_t c_index) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getDouble:(::djinni::I32::fromCpp(c_index))];
            return ::djinni::F64::toCpp(objcpp_result_);
        }
    }
    int32_t getInt(int32_t c_index) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getInt:(::djinni::I32::fromCpp(c_index))];
            return ::djinni::I32::toCpp(objcpp_result_);
        }
    }
    std::string getString(int32_t c_index) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getString:(::djinni::I32::fromCpp(c_index))];
            return ::djinni::String::toCpp(objcpp_result_);
        }
    }
    std::shared_ptr<::JavascriptArray> getArray(int32_t c_index) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getArray:(::djinni::I32::fromCpp(c_index))];
            return ::djinni_generated::JavascriptArray::toCpp(objcpp_result_);
        }
    }
    std::shared_ptr<::JavascriptMap> getMap(int32_t c_index) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getMap:(::djinni::I32::fromCpp(c_index))];
            return ::djinni_generated::JavascriptMap::toCpp(objcpp_result_);
        }
    }
    std::shared_ptr<::JavascriptObject> getObject(int32_t c_index) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getObject:(::djinni::I32::fromCpp(c_index))];
            return ::djinni_generated::JavascriptObject::toCpp(objcpp_result_);
        }
    }
    ::JavascriptType getType(int32_t c_index) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getType:(::djinni::I32::fromCpp(c_index))];
            return ::djinni::Enum<::JavascriptType, RVJavascriptType>::toCpp(objcpp_result_);
        }
    }
    void pushNull() override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() pushNull];
        }
    }
    void pushBoolean(bool c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() pushBoolean:(::djinni::Bool::fromCpp(c_value))];
        }
    }
    void pushDouble(double c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() pushDouble:(::djinni::F64::fromCpp(c_value))];
        }
    }
    void pushInt(int32_t c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() pushInt:(::djinni::I32::fromCpp(c_value))];
        }
    }
    void pushString(const std::string & c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() pushString:(::djinni::String::fromCpp(c_value))];
        }
    }
    void pushArray(const std::shared_ptr<::JavascriptArray> & c_array) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() pushArray:(::djinni_generated::JavascriptArray::fromCpp(c_array))];
        }
    }
    void pushMap(const std::shared_ptr<::JavascriptMap> & c_map) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() pushMap:(::djinni_generated::JavascriptMap::fromCpp(c_map))];
        }
    }
    void pushObject(const std::shared_ptr<::JavascriptObject> & c_object) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() pushObject:(::djinni_generated::JavascriptObject::fromCpp(c_object))];
        }
    }
    void append(const std::shared_ptr<::JavascriptArray> & c_source) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() append:(::djinni_generated::JavascriptArray::fromCpp(c_source))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto JavascriptArray::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto JavascriptArray::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
