// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from react.djinni

#import "RVJavascriptPromise+Private.h"
#import "RVJavascriptPromise.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "RVJavascriptArray+Private.h"
#import "RVJavascriptMap+Private.h"
#import "RVJavascriptObject+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class JavascriptPromise::ObjcProxy final
: public ::JavascriptPromise
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::JavascriptPromise;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void resolveNull() override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() resolveNull];
        }
    }
    void resolveBoolean(bool c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() resolveBoolean:(::djinni::Bool::fromCpp(c_value))];
        }
    }
    void resolveDouble(double c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() resolveDouble:(::djinni::F64::fromCpp(c_value))];
        }
    }
    void resolveInt(int32_t c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() resolveInt:(::djinni::I32::fromCpp(c_value))];
        }
    }
    void resolveString(const std::string & c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() resolveString:(::djinni::String::fromCpp(c_value))];
        }
    }
    void resolveArray(const std::shared_ptr<::JavascriptArray> & c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() resolveArray:(::djinni_generated::JavascriptArray::fromCpp(c_value))];
        }
    }
    void resolveMap(const std::shared_ptr<::JavascriptMap> & c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() resolveMap:(::djinni_generated::JavascriptMap::fromCpp(c_value))];
        }
    }
    void resolveObject(const std::shared_ptr<::JavascriptObject> & c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() resolveObject:(::djinni_generated::JavascriptObject::fromCpp(c_value))];
        }
    }
    void reject(const std::string & c_code, const std::string & c_message) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() reject:(::djinni::String::fromCpp(c_code))
                                                     message:(::djinni::String::fromCpp(c_message))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto JavascriptPromise::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto JavascriptPromise::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
