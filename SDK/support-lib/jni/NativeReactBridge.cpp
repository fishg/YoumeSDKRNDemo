// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from react.djinni

#include "NativeReactBridge.hpp"  // my header
#include "Marshal.hpp"
#include "NativeJavascriptArray.hpp"
#include "NativeJavascriptMap.hpp"
#include "NativeJobDispatcher.hpp"
#include "NativeJobQueue.hpp"

namespace djinni_generated {

NativeReactBridge::NativeReactBridge() : ::djinni::JniInterface<::ReactBridge, NativeReactBridge>() {}

NativeReactBridge::~NativeReactBridge() = default;

NativeReactBridge::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeReactBridge::JavaProxy::~JavaProxy() = default;

std::shared_ptr<::JavascriptMap> NativeReactBridge::JavaProxy::createMap() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeReactBridge>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createMap);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeJavascriptMap::toCpp(jniEnv, jret);
}
std::shared_ptr<::JavascriptArray> NativeReactBridge::JavaProxy::createArray() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeReactBridge>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createArray);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeJavascriptArray::toCpp(jniEnv, jret);
}
std::shared_ptr<::JavascriptMap> NativeReactBridge::JavaProxy::copyMap(const std::shared_ptr<::JavascriptMap> & c_map) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeReactBridge>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_copyMap,
                                         ::djinni::get(::djinni_generated::NativeJavascriptMap::fromCpp(jniEnv, c_map)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeJavascriptMap::toCpp(jniEnv, jret);
}
std::shared_ptr<::JavascriptArray> NativeReactBridge::JavaProxy::copyArray(const std::shared_ptr<::JavascriptArray> & c_array) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeReactBridge>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_copyArray,
                                         ::djinni::get(::djinni_generated::NativeJavascriptArray::fromCpp(jniEnv, c_array)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeJavascriptArray::toCpp(jniEnv, jret);
}
void NativeReactBridge::JavaProxy::emitEventWithMap(const std::string & c_name, const std::shared_ptr<::JavascriptMap> & c_params) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeReactBridge>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_emitEventWithMap,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_name)),
                           ::djinni::get(::djinni_generated::NativeJavascriptMap::fromCpp(jniEnv, c_params)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeReactBridge::JavaProxy::emitEventWithArray(const std::string & c_name, const std::shared_ptr<::JavascriptArray> & c_params) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeReactBridge>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_emitEventWithArray,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_name)),
                           ::djinni::get(::djinni_generated::NativeJavascriptArray::fromCpp(jniEnv, c_params)));
    ::djinni::jniExceptionCheck(jniEnv);
}
std::shared_ptr<::JobDispatcher> NativeReactBridge::JavaProxy::createJobDispatcher(const std::shared_ptr<::JobQueue> & c_queue) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeReactBridge>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createJobDispatcher,
                                         ::djinni::get(::djinni_generated::NativeJobQueue::fromCpp(jniEnv, c_queue)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeJobDispatcher::toCpp(jniEnv, jret);
}

}  // namespace djinni_generated
