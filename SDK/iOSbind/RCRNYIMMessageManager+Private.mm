// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from main.djinni

#import "RCRNYIMMessageManager+Private.h"
#import "RCRNYIMMessageManager.h"
#import "RVReactDjinni.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "RVJavascriptCallback+Private.h"
#import "RVReactBridge+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface RCRNYIMMessageManager ()

- (id)initWithCpp:(const std::shared_ptr<::RNYIMMessageManager>&)cppRef;

@end

@implementation RCRNYIMMessageManager {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::RNYIMMessageManager>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::RNYIMMessageManager>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}
+ (NSString *)moduleName
{
    return @"RNYIMMessageManager";
}

+ (nullable RCRNYIMMessageManager *)create:(nullable id<RVReactBridge>)bridge {
    try {
        auto objcpp_result_ = ::RNYIMMessageManager::create(::djinni_generated::ReactBridge::toCpp(bridge));
        return ::djinni_generated::RNYIMMessageManager::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(SendTextMessage:(nullable NSString *)receiverID
                         chatType:(int)chatType
                             text:(nullable NSString *)text
                            extra:(nullable NSString *)extra
                         callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->SendTextMessage(::djinni::String::toCpp(receiverID),
                                             ::djinni::I32::toCpp(chatType),
                                             ::djinni::String::toCpp(text),
                                             ::djinni::String::toCpp(extra),
                                             ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(SendAudioMessage:(nullable NSString *)receiverID
                          chatType:(int)chatType
                          callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->SendAudioMessage(::djinni::String::toCpp(receiverID),
                                              ::djinni::I32::toCpp(chatType),
                                              ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(SendOnlyAudioMessage:(nullable NSString *)receiverID
                              chatType:(int)chatType
                              callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->SendOnlyAudioMessage(::djinni::String::toCpp(receiverID),
                                                  ::djinni::I32::toCpp(chatType),
                                                  ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(SendFile:(nullable NSString *)receiverID
                  chatType:(int)chatType
                  filePath:(nullable NSString *)filePath
                  fileType:(int)fileType
                extraParam:(nullable NSString *)extraParam
                  callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->SendFile(::djinni::String::toCpp(receiverID),
                                      ::djinni::I32::toCpp(chatType),
                                      ::djinni::String::toCpp(filePath),
                                      ::djinni::I32::toCpp(fileType),
                                      ::djinni::String::toCpp(extraParam),
                                      ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(StopAudioMessage:(nullable NSString *)extraParam
                          callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->StopAudioMessage(::djinni::String::toCpp(extraParam),
                                              ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(CancelAudioMessage:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->CancelAudioMessage(::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(DownloadFile:(nullable NSString *)messageID
                      savePath:(nullable NSString *)savePath
                      callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->DownloadFile(::djinni::String::toCpp(messageID),
                                          ::djinni::String::toCpp(savePath),
                                          ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(DownloadFileByUrl:(nullable NSString *)url
                           savePath:(nullable NSString *)savePath
                           callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->DownloadFileByUrl(::djinni::String::toCpp(url),
                                               ::djinni::String::toCpp(savePath),
                                               ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(SetMessageRead:(nullable NSString *) messageID
                isRead:(bool) isRead
                  callback:(nonnull RCTResponseSenderBlock)callback){
  try {
      _cppRefHandle.get()->SetMessageRead(::djinni::String::toCpp(messageID),
                                             ::djinni::Bool::toCpp(isRead),
                                             ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
  } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(SetAllMessageRead:(nullable NSString *) userID
                   isRead:(bool) isRead
                  callback:(nonnull RCTResponseSenderBlock)callback){
      try {
          _cppRefHandle.get()->SetAllMessageRead(::djinni::String::toCpp(userID),
                                                 ::djinni::Bool::toCpp(isRead),
                                                 ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
      } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto RNYIMMessageManager::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto RNYIMMessageManager::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<RCRNYIMMessageManager>(cpp);
}

}  // namespace djinni_generated

@end
