// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from main.djinni

#import "RCRNYIMLocationManager+Private.h"
#import "RCRNYIMLocationManager.h"
#import "RVReactDjinni.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "RVJavascriptCallback+Private.h"
#import "RVReactBridge+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface RCRNYIMLocationManager ()

- (id)initWithCpp:(const std::shared_ptr<::RNYIMLocationManager>&)cppRef;

@end

@implementation RCRNYIMLocationManager {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::RNYIMLocationManager>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::RNYIMLocationManager>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}
+ (NSString *)moduleName
{
    return @"RNYIMLocationManager";
}

+ (nullable RCRNYIMLocationManager *)create:(nullable id<RVReactBridge>)bridge {
    try {
        auto objcpp_result_ = ::RNYIMLocationManager::create(::djinni_generated::ReactBridge::toCpp(bridge));
        return ::djinni_generated::RNYIMLocationManager::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(GetCurrentLocation:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->GetCurrentLocation(::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(GetNearbyObjects:(int)count
                      serverAreaID:(nullable NSString *)serverAreaID
                     districtLevel:(int)districtLevel
                resetStartDistance:(BOOL)resetStartDistance
                          callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->GetNearbyObjects(::djinni::I32::toCpp(count),
                                              ::djinni::String::toCpp(serverAreaID),
                                              ::djinni::I32::toCpp(districtLevel),
                                              ::djinni::Bool::toCpp(resetStartDistance),
                                              ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(GetDistance:(nullable NSString *)userID
                     callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->GetDistance(::djinni::String::toCpp(userID),
                                         ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto RNYIMLocationManager::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto RNYIMLocationManager::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<RCRNYIMLocationManager>(cpp);
}

}  // namespace djinni_generated

@end
