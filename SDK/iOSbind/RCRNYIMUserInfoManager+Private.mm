// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from main.djinni

#import "RCRNYIMUserInfoManager+Private.h"
#import "RCRNYIMUserInfoManager.h"
#import "RVReactDjinni.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "RVJavascriptCallback+Private.h"
#import "RVReactBridge+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface RCRNYIMUserInfoManager ()

- (id)initWithCpp:(const std::shared_ptr<::RNYIMUserInfoManager>&)cppRef;

@end

@implementation RCRNYIMUserInfoManager {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::RNYIMUserInfoManager>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::RNYIMUserInfoManager>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}
+ (NSString *)moduleName
{
    return @"RNYIMUserInfoManager";
}

+ (nullable RCRNYIMUserInfoManager *)create:(nullable id<RVReactBridge>)bridge {
    try {
        auto objcpp_result_ = ::RNYIMUserInfoManager::create(::djinni_generated::ReactBridge::toCpp(bridge));
        return ::djinni_generated::RNYIMUserInfoManager::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(SetUserInfo:(nullable NSString *)nickName
                          sex:(int)sex
            personalSignature:(nullable NSString *)personalSignature
                      country:(nullable NSString *)country
                     province:(nullable NSString *)province
                         city:(nullable NSString *)city
                    extraInfo:(nullable NSString *)extraInfo
                     callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->SetUserInfo(::djinni::String::toCpp(nickName),
                                         ::djinni::I32::toCpp(sex),
                                         ::djinni::String::toCpp(personalSignature),
                                         ::djinni::String::toCpp(country),
                                         ::djinni::String::toCpp(province),
                                         ::djinni::String::toCpp(city),
                                         ::djinni::String::toCpp(extraInfo),
                                         ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(SetUserHeadImage:(nullable NSString *)path
                          callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->SetUserHeadImage(::djinni::String::toCpp(path),
                                              ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(QueryUserInfo:(nullable NSString *)userID
                       callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->QueryUserInfo(::djinni::String::toCpp(userID),
                                           ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(SwitchUserStatus:(nullable NSString *)userID
                            status:(int)status
                          callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->SwitchUserStatus(::djinni::String::toCpp(userID),
                                              ::djinni::I32::toCpp(status),
                                              ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

RCT_EXPORT_METHOD(SetAddPermission:(BOOL)beFound
                   beAddPermission:(int)beAddPermission
                          callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->SetAddPermission(::djinni::Bool::toCpp(beFound),
                                              ::djinni::I32::toCpp(beAddPermission),
                                              ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}
/*
RCT_EXPORT_METHOD(SetUserExtendStatus:(nullable NSString *)status
                             callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->SetUserExtendStatus(::djinni::String::toCpp(status),
                                                 ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}
*/

/*
RCT_EXPORT_METHOD(SetHeaderImageUrl:(nullable NSString *)url
                           callback:(nonnull RCTResponseSenderBlock)callback) {
    try {
        _cppRefHandle.get()->SetHeaderImageUrl(::djinni::String::toCpp(url),
                                               ::djinni_generated::JavascriptCallback::toCpp([RVReactDjinni wrapCallback:callback]));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}
 */

namespace djinni_generated {

auto RNYIMUserInfoManager::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto RNYIMUserInfoManager::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<RCRNYIMUserInfoManager>(cpp);
}

}  // namespace djinni_generated

@end
