// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from main.djinni

package com.youme.imrn.jni;

import com.facebook.react.bridge.Callback;
import com.facebook.react.bridge.Promise;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.ReadableArray;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.bridge.WritableArray;
import com.facebook.react.bridge.WritableMap;
import com.facebook.react.module.annotations.ReactModule;
import com.youme.reactcpp.ReactDjinni;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.atomic.AtomicBoolean;

/**----------------------------好友管理---------------------------- */
@ReactModule(name = "RNYIMFriendManager")
public final class RNYIMFriendManager extends ReactContextBaseJavaModule {
    private final CppProxy mModule;

    public RNYIMFriendManager(ReactApplicationContext reactContext) {
        super(reactContext);
        mModule = create(ReactDjinni.createReactBridge(reactContext));
    }

    @Override
    public String getName() {
        return "RNYIMFriendManager";
    }

    private static native CppProxy create(com.youme.reactcpp.ReactBridge bridge);

    /** 功能：添加好友 */
    @ReactMethod
    public void RequestAddFriend(String userID, String comments, Callback callback) {
        mModule.RequestAddFriend(userID, comments, ReactDjinni.wrap(callback));
    }

    /** 处理被请求添加好友 (dealResult：处理结果	0：同意	1：拒绝) */
    @ReactMethod
    public void DealBeRequestAddFriend(String userID, int dealResult, Callback callback) {
        mModule.DealBeRequestAddFriend(userID, dealResult, ReactDjinni.wrap(callback));
    }

    /** 删除好友 deleteType：删除类型	0：双向删除	1：单向删除(删除方在被删除方好友列表依然存在) */
    @ReactMethod
    public void DeleteFriend(String userID, int deleteType, Callback callback) {
        mModule.DeleteFriend(userID, deleteType, ReactDjinni.wrap(callback));
    }

    /** 拉黑好友 type：0：拉黑	1：解除拉黑 */
    @ReactMethod
    public void BlackFriend(int type, String userID, Callback callback) {
        mModule.BlackFriend(type, userID, ReactDjinni.wrap(callback));
    }

    /** 查询我的好友 */
    @ReactMethod
    public void QueryFriends(int type, int startIndex, int count, Callback callback) {
        mModule.QueryFriends(type, startIndex, count, ReactDjinni.wrap(callback));
    }

    /** 查询好友请求列表 */
    @ReactMethod
    public void QueryFriendRequestList(int startIndex, int count, Callback callback) {
        mModule.QueryFriendRequestList(startIndex, count, ReactDjinni.wrap(callback));
    }

    /** 获取推荐好友 */
    /*
    @ReactMethod
    public void GetRecommandUser(int startIndex, int count, Callback callback) {
        mModule.GetRecommandUser(startIndex, count, ReactDjinni.wrap(callback));
    }
*/
    private static final class CppProxy
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        public void RequestAddFriend(String userID, String comments, com.youme.reactcpp.JavascriptCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_RequestAddFriend(this.nativeRef, userID, comments, callback);
        }
        private native void native_RequestAddFriend(long _nativeRef, String userID, String comments, com.youme.reactcpp.JavascriptCallback callback);

        public void DealBeRequestAddFriend(String userID, int dealResult, com.youme.reactcpp.JavascriptCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_DealBeRequestAddFriend(this.nativeRef, userID, dealResult, callback);
        }
        private native void native_DealBeRequestAddFriend(long _nativeRef, String userID, int dealResult, com.youme.reactcpp.JavascriptCallback callback);

        public void DeleteFriend(String userID, int deleteType, com.youme.reactcpp.JavascriptCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_DeleteFriend(this.nativeRef, userID, deleteType, callback);
        }
        private native void native_DeleteFriend(long _nativeRef, String userID, int deleteType, com.youme.reactcpp.JavascriptCallback callback);

        public void BlackFriend(int type, String userID, com.youme.reactcpp.JavascriptCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_BlackFriend(this.nativeRef, type, userID, callback);
        }
        private native void native_BlackFriend(long _nativeRef, int type, String userID, com.youme.reactcpp.JavascriptCallback callback);

        public void QueryFriends(int type, int startIndex, int count, com.youme.reactcpp.JavascriptCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_QueryFriends(this.nativeRef, type, startIndex, count, callback);
        }
        private native void native_QueryFriends(long _nativeRef, int type, int startIndex, int count, com.youme.reactcpp.JavascriptCallback callback);

        public void QueryFriendRequestList(int startIndex, int count, com.youme.reactcpp.JavascriptCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_QueryFriendRequestList(this.nativeRef, startIndex, count, callback);
        }
        private native void native_QueryFriendRequestList(long _nativeRef, int startIndex, int count, com.youme.reactcpp.JavascriptCallback callback);

//        public void GetRecommandUser(int startIndex, int count, com.youme.reactcpp.JavascriptCallback callback)
//        {
//            assert !this.destroyed.get() : "trying to use a destroyed object";
//            native_GetRecommandUser(this.nativeRef, startIndex, count, callback);
//        }
//        private native void native_GetRecommandUser(long _nativeRef, int startIndex, int count, com.youme.reactcpp.JavascriptCallback callback);
    }
}
